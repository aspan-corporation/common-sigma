schema {
  query: Query
  mutation: Mutation
}

type Query {
  listFolder(id: String!, nextToken: String, pageSize: Int!): FolderConnection
  search(
    searchInput: SearchInput!
    nextToken: String
    pageSize: Int!
  ): FolderConnection
  keys(pageSize: Int!): KeysConnection
  values(key: String!, pageSize: Int!): ValuesConnection
}

type Mutation {
  updateMetaData(id: String!, metaDataInput: MetaDataInput): MetaData
}

type FolderConnection {
  folders: [MetaData!]
  files: [MetaData!]
  nextToken: String
}

type KeysConnection {
  keys: [String!]
  nextToken: String
}

type ValuesConnection {
  key: String
  values: [String!]
  nextToken: String
}

type Tag {
  key: String!
  value: String!
}

input TagInput {
  key: String!
  value: String!
}

type MetaData {
  id: String!
  tags: [Tag!]
}

input MetaDataInput {
  tags: [TagInput!]!
}

enum SortOrder {
  ASC
  DESC
}

input SortTerm {
  key: String!
  sortOrder: SortOrder!
}

input SearchInput {
  filter: MetaDataInput!
  sorter: [SortTerm!]
}

