AWSTemplateFormatVersion : 2010-09-09
Description: >
  This template deploys a CodePipeline with its required resources.

  The following stages are predefined in this template:
  - Source
  - UpdatePipeline
  - BuildAndPackage
  - DeployTest

# To deploy this template and connect to the main git branch, run this:
# ```
# sam deploy -t codepipeline.yaml --stack-name <stack-name> --capabilities=CAPABILITY_IAM \
#   --parameter-overrides="GitBranch=<branch-name> AnotherParameter=<another-parameter-value>"
# ```

Parameters:
  FullRepositoryId:
    Type: String
    AllowedPattern : ".+"
  GitBranch:
    Type: String
    AllowedPattern : ".+"
  SamTemplate:
    Type: String
    Default: "template.yaml"
  Region:
    Type: String
    AllowedPattern : "us-east-1"
  StackName:
    Type: String
    AllowedPattern : ".+"

Resources:
  #  ____  _            _ _
  # |  _ \(_)_ __   ___| (_)_ __   ___
  # | |_) | | '_ \ / _ | | | '_ \ / _ \
  # |  __/| | |_) |  __| | | | | |  __/
  # |_|   |_| .__/ \___|_|_|_| |_|\___|
  #         |_|
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !ImportValueValue InfrastructureBucketArn
        Type: S3
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      RestartExecutionOnUpdate: true
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !ImportValueValue CodeStarConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: !Ref GitBranch
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: UpdatePipeline
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !ImportValue CloudFormationExecutionRoleArn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
                TemplatePath: SourceCodeAsZip::codepipeline.yaml
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub |
                  {
                    "FeatureGitBranch": "${FeatureGitBranch}",
                    "CodeStarConnectionArn": "${CodeStarConnectionArn}"
                  }
              InputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !ImportValue CloudFormationExecutionRoleArn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}ChangeSet
              RunOrder: 2

        # Uncomment and modify the following step for running the unit-tests
        # - Name: UnitTest
        #   Actions:
        #     - Name: UnitTest
        #       ActionTypeId:
        #         Category: Build
        #         Owner: AWS
        #         Provider: CodeBuild
        #         Version: "1"
        #       Configuration:
        #         ProjectName: !Ref CodeBuildProjectUnitTest
        #       InputArtifacts:
        #         - Name: SourceCodeAsZip

        - !If
          - IsMainBranchPipeline
          - Name: BuildAndPackage
            Actions:
              - Name: CodeBuild
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: "1"
                Configuration:
                  ProjectName: !Ref CodeBuildProjectBuildAndPackage
                InputArtifacts:
                  - Name: SourceCodeAsZip
                OutputArtifacts:
                  - Name: BuildArtifactAsZip
          - !Ref AWS::NoValue

        - !If
          - IsMainBranchPipeline
          - Name: DeployTest
            Actions:
              - Name: DeployTest
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: "1"
                Configuration:
                  ProjectName: !Ref CodeBuildProjectDeploy
                  EnvironmentVariables:
                    !Sub
                      - |
                        [
                          {"name": "ENV_TEMPLATE", "value": "packaged-test.yaml"},
                          {"name": "ENV_REGION", "value": "${TestingRegion}"},
                          {"name": "ENV_STACK_NAME", "value": "${StackName}"},
                          {"name": "ENV_PIPELINE_EXECUTION_ROLE", "value": "${CodePipelineExecutionRole}"},
                          {"name": "ENV_CLOUDFORMATION_EXECUTION_ROLE", "value": "${CloudFormationExecutionRoleArn}"},
                          {"name": "ENV_BUCKET", "value": "${InfrastructureBucketName}"}
                        ]
                      -
                        CloudFormationExecutionRoleArn: !ImportValue CloudFormationExecutionRoleArn
                        InfrastructureBucketName: !ImportValue InfrastructureBucketName
                InputArtifacts:
                  - Name: BuildArtifactAsZip
                RunOrder: 1
              - Name: IntegrationTest
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: "1"
                Configuration:
                  ProjectName: !Ref CodeBuildProjectIntegrationTest
                InputArtifacts:
                  - Name: SourceCodeAsZip
                RunOrder: 2
          - !Ref AWS::NoValue

  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"
        - PolicyName: CodeStarConnectionAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "codestar-connections:UseConnection"
                Resource: !Ref CodeStarConnectionArn
        - PolicyName: CodePipelineCodeAndS3Bucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Effect: Allow
                Resource: !GetAtt InfrastructureBucket.Arn
              - Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Effect: Allow
                Resource: 
                  !Sub
                    - "${InfrastructureBucketArn}/*"
                    - InfrastructureBucketArn: !GetAtt InfrastructureBucket.Arn
        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  # Uncomment the line below to enable the unit-tests
                  # - !GetAtt CodeBuildProjectUnitTest.Arn
                  - !If
                    - IsFeatureBranchPipeline
                    - !GetAtt CodeBuildProjectBuildAndDeployFeature.Arn
                    - !Ref AWS::NoValue
                  - !If
                    - IsMainBranchPipeline
                    - !GetAtt CodeBuildProjectBuildAndPackage.Arn
                    - !Ref AWS::NoValue
                  # Uncomment the following step for running the integration tests
                  # - !If
                  #   - IsMainBranchPipeline
                  #   - !GetAtt CodeBuildProjectIntegrationTest.Arn
                  #   - !Ref AWS::NoValue
                  - !If
                    - IsMainBranchPipeline
                    - !GetAtt CodeBuildProjectDeploy.Arn
                    - !Ref AWS::NoValue
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"

  #   ____          _      ____        _ _     _
  #  / ___|___   __| | ___| __ ) _   _(_| | __| |
  # | |   / _ \ / _` |/ _ |  _ \| | | | | |/ _` |
  # | |__| (_) | (_| |  __| |_) | |_| | | | (_| |
  #  \____\___/ \__,_|\___|____/ \__,_|_|_|\__,_|

  # Uncomment and modify the following step for running the unit-tests
  # CodeBuildProjectUnitTest:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
  #     ServiceRole: !ImportValue CodeBuildServiceRoleArn
  #     Source:
  #       Type: CODEPIPELINE
  #       BuildSpec: pipeline/buildspec_unit_test.yml

  CodeBuildProjectBuildAndPackage:
    Condition: IsMainBranchPipeline
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: SAM_TEMPLATE
            Value: !Ref SamTemplate
          - Name: REGION
            Value: !Sub ${AWS::Region}
          - Name: PIPELINE_EXECUTION_ROLE
            Value: !ImportValue PipelineExecutionRoleArn
          - Name: ARTIFACT_BUCKET
            Value: !ImportValue InfrastructureBucketName
      ServiceRole: !ImportValue CodeBuildServiceRoleArn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_build_package.yml

  # Uncomment and modify the following step for running the integration tests
  # CodeBuildProjectIntegrationTest:
  #   Condition: IsMainBranchPipeline
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
  #     ServiceRole: !ImportValue CodeBuildServiceRoleArn
  #     Source:
  #       Type: CODEPIPELINE
  #       BuildSpec: pipeline/buildspec_integration_test.yml

  CodeBuildProjectDeploy:
    Condition: IsMainBranchPipeline
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
      ServiceRole: !ImportValue CodeBuildServiceRoleArn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_deploy.yml
